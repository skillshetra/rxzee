# Generated by Django 5.0.6 on 2024-10-24 05:17

import app.models
import ckeditor_uploader.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="contact",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        choices=[
                            ("general_inquiry", "General Inquiry"),
                            ("support", "Support"),
                            ("feedback", "Feedback"),
                            ("complaint", "Complaint"),
                            ("other", "Other"),
                        ],
                        default="general_inquiry",
                        max_length=50,
                    ),
                ),
                ("fullname", models.CharField(max_length=100)),
                ("email", models.CharField(max_length=100)),
                ("message", models.TextField(max_length=1000)),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="drug_search",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="", max_length=150)),
                ("condition", models.CharField(default="", max_length=120)),
                ("generic_name", models.CharField(default="", max_length=200)),
                ("drug_class", models.CharField(default="", max_length=150)),
                ("type", models.CharField(default="", max_length=10)),
                ("permalink", models.CharField(default="", max_length=150)),
                ("off_market_drug", models.BooleanField(default=False)),
                ("label", models.CharField(default="", max_length=10)),
                ("search_count", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="footer_page",
            fields=[
                (
                    "permalink",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("title", models.CharField(max_length=100)),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("About Us", "About Us"),
                            ("Support", "Support"),
                            ("Terms & Privacy", "Terms & Privacy"),
                        ],
                        default="aboutus",
                        max_length=50,
                    ),
                ),
                ("seo_title", models.CharField(max_length=200)),
                ("seo_description", models.TextField()),
                ("seo_keywords", models.TextField()),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="header_page",
            fields=[
                (
                    "permalink",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("title", models.CharField(max_length=100)),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("drugs", "Drugs and Supplements"),
                            ("conditions", "Conditions"),
                            ("well-being", "Well Being"),
                            ("more", "More"),
                        ],
                        default="more",
                        max_length=50,
                    ),
                ),
                ("seo_title", models.CharField(max_length=200)),
                ("seo_description", models.TextField()),
                ("seo_keywords", models.TextField()),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="HomePage",
            fields=[
                (
                    "id",
                    models.CharField(
                        default="1",
                        editable=False,
                        max_length=1,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("search_drug_conditions", models.BooleanField(default=True)),
                ("slider", models.BooleanField(default=True)),
                ("healthy_life", models.BooleanField(default=True)),
                ("health_az", models.BooleanField(default=True)),
                ("top_news", models.BooleanField(default=True)),
                ("twitter", models.URLField(default="https://x.com/rxzee")),
                ("youtube", models.URLField(default="https://youtube.com/rxzee")),
                ("facebook", models.URLField(default="https://facebook.com/rxzee")),
                ("linkedin", models.URLField(default="https://linkedin.com/rxzee")),
                ("instagram", models.URLField(default="https://instagram.com/rxzee")),
                ("GoogleTagId", models.CharField(default="GTM-XXXXXX", max_length=50)),
                (
                    "GoogleSearchConsoleId",
                    models.CharField(default="Search Console Id", max_length=200),
                ),
                ("robots", models.TextField(default="User-agent: *\nDisallow: /")),
            ],
        ),
        migrations.CreateModel(
            name="newsletter",
            fields=[
                (
                    "email",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("monthly_newsletter", models.BooleanField(default=True)),
                ("daily_newsletter", models.BooleanField(default=True)),
                ("FDA_safety_alerts", models.BooleanField(default=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("author", "Author"),
                            ("admin", "Admin"),
                        ],
                        default="user",
                        max_length=20,
                    ),
                ),
                ("phone_number", models.CharField(max_length=10)),
                ("address", models.TextField()),
                ("date_of_birth", models.DateField(blank=True)),
                ("link", models.URLField()),
                ("every_day_mednews", models.BooleanField(default=True)),
                ("monthly_newsletter", models.BooleanField(default=True)),
                ("monthly_newsletter_health_care", models.BooleanField(default=True)),
                ("FDA_approvals_for_drugs", models.BooleanField(default=False)),
                ("FDA_safety_alerts", models.BooleanField(default=False)),
                ("supporters", models.BooleanField(default=False)),
                (
                    "notice_of_projects_for_eDetailing",
                    models.BooleanField(default=False),
                ),
                ("notice_of_CME_events", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="custom_user_set", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True, related_name="custom_user_set", to="auth.permission"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="allergies",
            fields=[
                (
                    "permalink",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "content",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                ("seo_title", models.CharField(max_length=200)),
                ("seo_description", models.TextField()),
                ("seo_keywords", models.CharField(max_length=200)),
                ("search_count", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AllerigiesAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="condition",
            fields=[
                (
                    "permalink",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("heading", models.CharField(max_length=200)),
                ("category", models.CharField(max_length=200)),
                ("sub_category", models.CharField(max_length=200)),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
                ("seo_title", models.CharField(max_length=200)),
                ("seo_description", models.TextField()),
                ("seo_keywords", models.TextField()),
                ("featured_image", models.ImageField(upload_to="featured_image/")),
                ("search_count", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ConditionsAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContactFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="contactus/")),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="app.contact",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="disease_interactions",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("formula", models.CharField(max_length=50)),
                ("header", models.CharField(max_length=100)),
                ("severity", models.CharField(max_length=500)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("Low", "Low"),
                            ("Moderate", "Moderate"),
                            ("Major", "Major"),
                        ],
                        default="Low",
                        max_length=10,
                    ),
                ),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DiseaseInteractionAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="drug",
            fields=[
                (
                    "permalink",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "generic_name",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                (
                    "brand_name",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                (
                    "pronunciation",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                (
                    "class_name",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                (
                    "dosage_forms",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                (
                    "availability",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                ("widgets", models.CharField(default="a, b, c", max_length=250)),
                (
                    "uses",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "side_effects",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "warnings",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "precautions",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "interactions",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "overdose",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                ("seo_title", models.CharField(max_length=200)),
                ("seo_description", models.TextField()),
                ("seo_keywords", models.CharField(max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DrugAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="drug_interactions",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_drug", models.CharField(max_length=100)),
                ("second_drug", models.CharField(max_length=100)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("Low", "Low"),
                            ("Moderate", "Moderate"),
                            ("Major", "Major"),
                        ],
                        default="Low",
                        max_length=10,
                    ),
                ),
                ("consumer", ckeditor_uploader.fields.RichTextUploadingField()),
                ("professional", ckeditor_uploader.fields.RichTextUploadingField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DrugInteractionAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="drugsFaq",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("question", models.CharField(help_text="question", max_length=200)),
                ("answer", models.TextField(help_text="answer")),
                (
                    "drug",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drug",
                        to="app.drug",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="food_interactions",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("formula", models.CharField(max_length=50)),
                ("header", models.CharField(max_length=100)),
                ("severity", models.CharField(max_length=50)),
                ("other_details", models.TextField(max_length=60)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("Low", "Low"),
                            ("Moderate", "Moderate"),
                            ("Major", "Major"),
                        ],
                        default="Low",
                        max_length=10,
                    ),
                ),
                ("consumer", ckeditor_uploader.fields.RichTextUploadingField()),
                ("professional", ckeditor_uploader.fields.RichTextUploadingField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="FoodInteractionAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="news",
            fields=[
                (
                    "permalink",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Consumer", "Consumer"),
                            ("Drugs", "Drugs"),
                            ("Vitamins", "Vitamins"),
                            ("Pipeline", "Pipeline"),
                            ("Clinical Traials", "Clinical Traials"),
                            ("FDA Alerts", "FDA Alerts"),
                        ],
                        default="Consumer",
                        max_length=50,
                    ),
                ),
                ("seo_title", models.CharField(max_length=200)),
                ("seo_description", models.TextField()),
                ("seo_keywords", models.TextField()),
                ("featured_image", models.ImageField(upload_to="featured_image/")),
                ("search_count", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NewsAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="pill",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("redirect_url_name", models.CharField(default="", max_length=150)),
                ("redirect_url_imprint", models.CharField(default="", max_length=100)),
                ("name", models.CharField(default="", max_length=150)),
                ("generic_name", models.CharField(default="", max_length=100)),
                ("strength", models.CharField(default="", max_length=50)),
                ("imprint_side_1", models.CharField(default="", max_length=50)),
                ("imprint_side_2", models.CharField(default="", max_length=50)),
                ("color", models.CharField(default="", max_length=50)),
                (
                    "shape",
                    models.CharField(
                        choices=[
                            ("Round", "Round"),
                            ("Oblong", "Oblong"),
                            ("Oval", "Oval"),
                            ("Five-Sided", "Five-Sided"),
                            ("Rectangular", "Rectangular"),
                            ("Trapezoidal", "Trapezoidal"),
                            ("Diamond", "Diamond"),
                            ("Elliptical", "Elliptical"),
                            ("Square", "Square"),
                            ("Triangular", "Triangular"),
                            ("Pentagon", "Pentagon"),
                            ("Almond", "Almond"),
                            ("Hexagonal", "Hexagonal"),
                            ("Cylindrical", "Cylindrical"),
                            ("Teardrop", "Teardrop"),
                            ("Shield", "Shield"),
                            ("Bullet", "Bullet"),
                            ("Square (Rounded Corners)", "Square (Rounded Corners)"),
                            ("Rectangular (Rounded End)", "Rectangular (Rounded End)"),
                            ("Other", "Other"),
                        ],
                        default="Other",
                        max_length=50,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=150,
                        null=True,
                        upload_to="pills/identifier/",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PillAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Questions",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("question", models.CharField(max_length=255)),
                ("details", models.TextField()),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Question",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserDeleteAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("user_username", models.CharField(max_length=255)),
                ("user_full_name", models.CharField(max_length=255)),
                (
                    "closure_reason",
                    models.TextField(blank=True, default="", max_length=1000),
                ),
                ("data_of_deletion", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("profile_name", models.CharField(max_length=255)),
                ("pregnancy_lactation_warnings", models.BooleanField(default=False)),
                (
                    "emergency_contact_contact_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emergency_contact_contact_phone_number",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "primary_physician_contact_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "primary_physician_contact_phone_number",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("other_details", models.TextField(blank=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ProfileUser",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfileNotes",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                ("time", models.TimeField(default=django.utils.timezone.now)),
                ("title", models.CharField(default="", max_length=255)),
                ("more_details", models.TextField(blank=True, default="")),
                ("tags", models.TextField(blank=True, default="")),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileNotes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileNotesItem",
                        to="app.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfileReminder",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("usage", models.TextField(blank=True, default="", max_length=50)),
                ("notes", models.TextField(blank=True, default="", max_length=100)),
                (
                    "actions",
                    models.CharField(
                        choices=[
                            ("taken", "Taken"),
                            ("skipped", "Skipped"),
                            ("", "None"),
                        ],
                        default="",
                        max_length=50,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "drug",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DrugUserProfileReminder",
                        to="app.drug",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileReminder",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileReminderItem",
                        to="app.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("country", models.CharField(default="", max_length=100)),
                ("region", models.CharField(default="", max_length=100)),
                ("city", models.CharField(default="", max_length=100)),
                ("zip_code", models.CharField(default="", max_length=100)),
                ("user_agent", models.TextField()),
                ("session_expiration", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="vitaminsAndSupplement",
            fields=[
                (
                    "permalink",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "other_names",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                ("widgets", models.CharField(default="a, b, c", max_length=250)),
                (
                    "overview",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "uses",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "side_effects",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "precautions",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "interactions",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                (
                    "dosing",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, default=""
                    ),
                ),
                ("seo_title", models.CharField(max_length=200)),
                ("seo_description", models.TextField()),
                ("seo_keywords", models.CharField(max_length=200)),
                ("search_count", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="VitaminsAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="vitaminsAndSupplementsFaq",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("question", models.CharField(help_text="question", max_length=200)),
                ("answer", models.TextField(help_text="answer")),
                (
                    "vitaminsAndSupplement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vitaminsAndSupplement",
                        to="app.vitaminsandsupplement",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="well_being",
            fields=[
                (
                    "permalink",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("title", models.CharField(max_length=200, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Aging Well", "Aging Well"),
                            ("Baby", "Baby"),
                            ("Birth Control", "Birth Control"),
                            ("Children's Health", "Children's Health"),
                            ("Diet & Weight Management", "Diet & Weight Management"),
                            ("Fitness & Exercise", "Fitness & Exercise"),
                            ("Food & Recipes", "Food & Recipes"),
                            ("Health & Balance", "Health & Balance"),
                            ("Healthy Beauty", "Healthy Beauty"),
                            ("Men's Health", "Men's Health"),
                            ("Parenting", "Parenting"),
                            ("Pet Health", "Pet Health"),
                            ("Pregnancy", "Pregnancy"),
                            ("Sex & Relationships", "Sex & Relationships"),
                            ("Teen Health", "Teen Health"),
                            ("Women's Health", "Women's Health"),
                        ],
                        default="Aging Well",
                        max_length=50,
                    ),
                ),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
                ("seo_title", models.CharField(max_length=200)),
                ("seo_description", models.TextField()),
                ("seo_keywords", models.TextField()),
                ("featured_image", models.ImageField(upload_to="featured_image/")),
                ("search_count", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("disapproved", "Disapproved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WellBeingAuthor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfileAllergies",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "allergy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileAllergies",
                        to="app.allergies",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileAllergiesUser",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileAllergiesItem",
                        to="app.userprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("user_profile", "allergy")},
            },
        ),
        migrations.CreateModel(
            name="UserProfileConditions",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "other_details",
                    models.TextField(blank=True, default="", max_length=150),
                ),
                ("condition", models.CharField(max_length=12)),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileConditionsUser",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileConditionsItem",
                        to="app.userprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("user_profile", "condition")},
            },
        ),
        migrations.CreateModel(
            name="UserProfileDrugs",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=app.models.generate_unique_id,
                        editable=False,
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("C", "Currently taking"),
                            ("R", "Researching"),
                            ("P", "Previously taken"),
                        ],
                        default="C",
                        max_length=1,
                    ),
                ),
                (
                    "other_details",
                    models.TextField(blank=True, default="", max_length=150),
                ),
                ("condition", models.CharField(max_length=12)),
                (
                    "dosage",
                    models.CharField(
                        choices=[
                            ("", "How many"),
                            ("0.25", "¼"),
                            ("0.5", "½"),
                            ("1", "1"),
                            ("1.5", "1 ½"),
                            ("2", "2"),
                            ("2.5", "2 ½"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("7.5", "7 ½"),
                            ("8", "8"),
                            ("9", "9"),
                            ("10", "10"),
                            ("12.5", "12 ½"),
                            ("15", "15"),
                            ("20", "20"),
                            ("other", "other"),
                        ],
                        default="",
                        max_length=50,
                    ),
                ),
                (
                    "dosage_form",
                    models.CharField(
                        choices=[
                            ("", "Form"),
                            ("compounding powder", "compounding powder"),
                            ("oral capsule", "oral capsule"),
                            (
                                "oral capsule, extended release",
                                "oral capsule, extended release",
                            ),
                            (
                                "oral delayed release capsule",
                                "oral delayed release capsule",
                            ),
                            (
                                "oral delayed release tablet",
                                "oral delayed release tablet",
                            ),
                            ("oral gum", "oral gum"),
                            (
                                "oral powder for reconstitution",
                                "oral powder for reconstitution",
                            ),
                            ("oral tablet", "oral tablet"),
                            ("oral tablet, chewable", "oral tablet, chewable"),
                            (
                                "oral tablet, disintegrating",
                                "oral tablet, disintegrating",
                            ),
                            ("oral tablet, dispersible", "oral tablet, dispersible"),
                            (
                                "oral tablet, extended release",
                                "oral tablet, extended release",
                            ),
                            ("rectal suppository", "rectal suppository"),
                            ("other", "other"),
                        ],
                        default="",
                        max_length=50,
                    ),
                ),
                (
                    "strength_code",
                    models.CharField(
                        choices=[
                            ("", "Strength"),
                            ("1 g", "1 g"),
                            ("1200 mg", "1200 mg"),
                            ("125 mg", "125 mg"),
                            ("162 mg", "162 mg"),
                            ("162.5 mg", "162.5 mg"),
                            ("227.5 mg", "227.5 mg"),
                            ("300 mg", "300 mg"),
                            ("325 mg", "325 mg"),
                            ("500 mg", "500 mg"),
                            ("60 mg", "60 mg"),
                            ("600 mg", "600 mg"),
                            ("650 mg", "650 mg"),
                            ("800 mg", "800 mg"),
                            ("81 mg", "81 mg"),
                            ("81 mg with phytosterols", "81 mg with phytosterols"),
                            ("975 mg", "975 mg"),
                            ("buffered 325 mg", "buffered 325 mg"),
                            ("buffered 500 mg", "buffered 500 mg"),
                            ("buffered 81 mg", "buffered 81 mg"),
                            ("other", "other"),
                        ],
                        default="",
                        max_length=50,
                    ),
                ),
                (
                    "schedule_type",
                    models.CharField(
                        choices=[
                            ("", "Frequency"),
                            ("As needed", "As needed"),
                            ("Daily", "Daily"),
                            ("Specific Days of Week", "Specific Days of Week"),
                            ("Days Interval", "Days Interval"),
                            ("Birth Control Cycle", "Birth Control Cycle"),
                        ],
                        default="",
                        max_length=50,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "drug",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DrugUserProfile",
                        to="app.drug",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserProfileDrugs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DrugUserProfileItem",
                        to="app.userprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("user_profile", "drug")},
            },
        ),
    ]
